user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 10000;
}

http {

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            off;
    tcp_nopush          off;
    tcp_nodelay         off;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/json;

    proxy_cache_path  /var/cache/nginx levels=1:2  keys_zone=STATIC:10m inactive=24h  max_size=1g;

    upstream default_server {
       server 10.136.107.163:8001;
       server 10.136.103.219:8001;
       keepalive 16;
    }

    server {
        server_tokens off;
        gzip on;
        gzip_vary on;
        gzip_disable "msie6";
        underscores_in_headers on;
        server_name api.comiccruncher.com;
        # Redirect trailing slashes to non-trailing slash.
        rewrite ^(.+)/$ $1 permanent;

        add_header x-xss-protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains" always;

        client_body_buffer_size     16k;
        client_header_buffer_size   1;
        large_client_header_buffers 2 1k;
        client_max_body_size          1m;
        location / {
            proxy_pass       http://default_server;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_buffering   on;
            proxy_cache       STATIC;
            proxy_cache_valid 200  1d;
            proxy_cache_use_stale  error timeout invalid_header updating
                                   http_500 http_502 http_503 http_504;
       }

        listen [::]:443 ssl http2 ipv6only=on; # managed by Certbot
        listen 443 ssl http2; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/api.comiccruncher.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/api.comiccruncher.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    }

    server {
        if ($host = api.comiccruncher.com) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        listen 80 default_server;
        listen [::]:80 default_server;
        server_name api.comiccruncher.com;
        return 404; # managed by Certbot

    }
}
