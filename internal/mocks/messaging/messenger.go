// Code generated by MockGen. DO NOT EDIT.
// Source: messaging/messenger.go

// Package mock_messaging is a generated GoMock package.
package mock_messaging

import (
	messaging "github.com/aimeelaplant/comiccruncher/messaging"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockJSONMessenger is a mock of JSONMessenger interface
type MockJSONMessenger struct {
	ctrl     *gomock.Controller
	recorder *MockJSONMessengerMockRecorder
}

// MockJSONMessengerMockRecorder is the mock recorder for MockJSONMessenger
type MockJSONMessengerMockRecorder struct {
	mock *MockJSONMessenger
}

// NewMockJSONMessenger creates a new mock instance
func NewMockJSONMessenger(ctrl *gomock.Controller) *MockJSONMessenger {
	mock := &MockJSONMessenger{ctrl: ctrl}
	mock.recorder = &MockJSONMessengerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockJSONMessenger) EXPECT() *MockJSONMessengerMockRecorder {
	return m.recorder
}

// Send mocks base method
func (m_2 *MockJSONMessenger) Send(m messaging.JSONMessage) error {
	ret := m_2.ctrl.Call(m_2, "Send", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send
func (mr *MockJSONMessengerMockRecorder) Send(m interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockJSONMessenger)(nil).Send), m)
}
