// Code generated by MockGen. DO NOT EDIT.
// Source: auth/auth.go

// Package mock_auth is a generated GoMock package.
package mock_auth

import (
	auth "github.com/aimeelaplant/comiccruncher/auth"
	orm "github.com/go-pg/pg/orm"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockORM is a mock of ORM interface
type MockORM struct {
	ctrl     *gomock.Controller
	recorder *MockORMMockRecorder
}

// MockORMMockRecorder is the mock recorder for MockORM
type MockORMMockRecorder struct {
	mock *MockORM
}

// NewMockORM creates a new mock instance
func NewMockORM(ctrl *gomock.Controller) *MockORM {
	mock := &MockORM{ctrl: ctrl}
	mock.recorder = &MockORMMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockORM) EXPECT() *MockORMMockRecorder {
	return m.recorder
}

// Model mocks base method
func (m *MockORM) Model(model ...interface{}) *orm.Query {
	varargs := []interface{}{}
	for _, a := range model {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Model", varargs...)
	ret0, _ := ret[0].(*orm.Query)
	return ret0
}

// Model indicates an expected call of Model
func (mr *MockORMMockRecorder) Model(model ...interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Model", reflect.TypeOf((*MockORM)(nil).Model), model...)
}

// MockTokenRepository is a mock of TokenRepository interface
type MockTokenRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTokenRepositoryMockRecorder
}

// MockTokenRepositoryMockRecorder is the mock recorder for MockTokenRepository
type MockTokenRepositoryMockRecorder struct {
	mock *MockTokenRepository
}

// NewMockTokenRepository creates a new mock instance
func NewMockTokenRepository(ctrl *gomock.Controller) *MockTokenRepository {
	mock := &MockTokenRepository{ctrl: ctrl}
	mock.recorder = &MockTokenRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTokenRepository) EXPECT() *MockTokenRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockTokenRepository) Create(t *auth.Token) error {
	ret := m.ctrl.Call(m, "Create", t)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockTokenRepositoryMockRecorder) Create(t interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTokenRepository)(nil).Create), t)
}
